name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.4
        ports: [27017:27017]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install backend dependencies
        run: cd server && npm install
      - name: Run backend tests
        run: cd server && npm test || true
      - name: Install frontend dependencies
        run: cd client && npm install
      - name: Run frontend tests
        run: cd client && npm test -- --watchAll=false || true

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ecom-backend:latest -f server/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ecom-backend:latest
      - name: Build and push frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ecom-frontend:latest -f client/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ecom-frontend:latest 